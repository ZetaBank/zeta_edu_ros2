| goThroughPoses(poses,                 | 일련의 위치를 통과하도록 로봇에 요청합니다.                                 |
| behavior_tree='')                     | (``PoseStamped`` 의 목록).                                                 |
+---------------------------------------+----------------------------------------------------------------------------+
| goToPose(pose, behavior_tree='')      | 특정 위치로 로봇을 이동하도록 요청합니다.                                   |
|                                       | (``PoseStamped``).                                                         |
+---------------------------------------+----------------------------------------------------------------------------+
| followWaypoints(poses)                | 일련의 경유지를 따라 이동하도록 로봇에 요청합니다.                          |
|                                       | (``PoseStamped`` 의 목록).                                                 |
+---------------------------------------+----------------------------------------------------------------------------+
| followPath(path, controller_id='',    | 시작점에서 목표지까지의 경로를 따라가도록 로봇에 요청합니다.                 |
| goal_checker_id='')                   | (``PoseStamped``, ``nav_msgs/Path``).                                      |
+---------------------------------------+----------------------------------------------------------------------------+
| spin(spin_dist=1.57,                  | 주어진 각도로 로봇을 회전하도록 요청합니다.                                 |
| time_allowance=10)                    |                                                                            |
+---------------------------------------+----------------------------------------------------------------------------+
| driveOnHeading(dist=0.15,             | 주어진 거리만큼 로봇을 특정 방향으로 운전하도록 요청합니다.                 |
| speed=0.025, time_allowance=10)       |                                                                            |
+---------------------------------------+----------------------------------------------------------------------------+
| backup(backup_dist=0.15,              | 주어진 거리만큼 로봇을 후진하도록 요청합니다.                               |
| backup_speed=0.025, time_allowance=10)|                                                                            |
+---------------------------------------+----------------------------------------------------------------------------+
| assistedTeleop(time_allowance=30)     | 보조 텔레옵 작업을 실행하도록 로봇에 요청합니다.                             |
+---------------------------------------+----------------------------------------------------------------------------+
| cancelTask()                          | 진행 중인 작업을 취소합니다.                                               |
+---------------------------------------+----------------------------------------------------------------------------+
| isTaskComplete(trackingRoute=False)   | 작업이 완료되었는지 확인합니다.                                            |
|                                       | 경로 추적 작업을 확인하는 경우, 기본 인수를 ``True`` 로 설정합니다.          |
+---------------------------------------+----------------------------------------------------------------------------+
| getFeedback(trackingRoute=False)      | 작업으로부터 피드백을 받아옵니다.                                         |
|                                       | 경로 추적 작업의 피드백을 가져오려면 기본 인수를 ``True`` 로 설정합니다.     |
+---------------------------------------+----------------------------------------------------------------------------+
| getResult()                           | 작업의 최종 결과를 가져옵니다.                                             |
|                                       | ``isTaskComplete`` 가 ``True`` 를 반환한 후에 호출해야 합니다.             |
+---------------------------------------+----------------------------------------------------------------------------+
| getPath(start, goal,                  | 시작점에서 목표지까지의 경로를 가져옵니다.                                 |
| planner_id='', use_start=False)       | (``PoseStamped``, ``nav_msgs/Path``).                                      |
+---------------------------------------+----------------------------------------------------------------------------+
| getPathThroughPoses(start, goals,     | 시작점에서 목표지까지의 경로를 가져옵니다.                                 |
| planner_id='', use_start=False)       | (``PoseStamped`` 의 목록, ``nav_msgs/Path``).                              |
+---------------------------------------+----------------------------------------------------------------------------+
| getRoute(start, goal,                 | 시작점에서 목표지까지의 빈도 경로와 밀집 경로를 가져옵니다.                 |
| use_start=False)                      | 시작점과 목표점은 알려진 NodeIDs의 경우 ``PoseStamped`` 또는 ``int`` 일 수 있습니다.|
+---------------------------------------+----------------------------------------------------------------------------+
| getandTrackRoute(start, goal,         | 시작점에서 목표지까지의 빈도 경로와 밀집 경로를 가져오고 추적합니다.       |
| use_start=False)                      | 시작점과 목표점은 알려진 NodeIDs의 경우 ``PoseStamped`` 또는 ``int`` 일 수 있습니다.|
+---------------------------------------+----------------------------------------------------------------------------+
| smoothPath(path, smoother_id='',      | 주어진 경로를 부드럽게 만듭니다.                                          |
| max_duration=2.0,                     | (``nav_msgs/Path``).                                                      |
| check_for_collision=False)            |                                                                            |
+---------------------------------------+----------------------------------------------------------------------------+
| changeMap(map_filepath)               | 현재 맵에서 `map_filepath` 의 yaml로 변경을 요청합니다.                      |
+---------------------------------------+----------------------------------------------------------------------------+
| clearAllCostmaps()                    | 전역 및 로컬 코스트맵을 모두 지웁니다.                                    |
+---------------------------------------+----------------------------------------------------------------------------+
| clearLocalCostmap()                   | 로컬 코스트맵을 지웁니다.                                                  |
+---------------------------------------+----------------------------------------------------------------------------+
| clearGlobalCostmap()                  | 전역 코스트맵을 지웁니다.                                                  |
+---------------------------------------+----------------------------------------------------------------------------+
| getGlobalCostmap()                    | 전역 코스트맵을 가져옵니다.                                                |
+---------------------------------------+----------------------------------------------------------------------------+
| getLocalCostmap()                     | 로컬 코스트맵을 가져옵니다.                                                |
+---------------------------------------+----------------------------------------------------------------------------+
| waitUntilNav2Active(                  | Nav2가 완전히 온라인이 되고 라이프사이클 노드가 활성 상태에 있는지 블록됩니다. |
| navigator='bt_navigator',             | autostart 또는 외부 라이프사이클 bringup과 함께 사용하십시오.                |
| localizer='amcl')                     |  사용자 정의 네비게이터 및 로컬라이저 노드를 지정할 수 있습니다.              |
+---------------------------------------+----------------------------------------------------------------------------+
| lifecycleStartup()                    | 모든 라이프사이클 관리 서버에 활성 상태로 전환하도록 요청을 보냅니다.         |
|                                       | autostart가 ``False`` 인 경우에 사용하여 이 프로그램이 Nav2의 라이프사이클을 제어합니다. |
+---------------------------------------+----------------------------------------------------------------------------+
| lifecycleShutdown()                   | 모든 라이프사이클 관리 서버에 종료 요청을 보냅니다.                       |
+---------------------------------------+----------------------------------------------------------------------------+
| destroyNode()                         | 객체에서 사용하는 리소스를 해제합니다.                                     |
+---------------------------------------+----------------------------------------------------------------------------+